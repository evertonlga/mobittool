/**
 * OUT!<unnamed> This code is automatically generated by the MoBIT Tool
 * 
 * @author Everton Leandro *
 */
public class LivroTester {
	TestableLivro server = null;
	private Arbiter arbiter = null;

	public Verdict executeTest(TestableLivro s) {
		arbiter = new Arbiter();
		;
		;
		server = s;
		;
		testCase1();
		testCase2();
		testCase3();
		testCase4();
		testCase5();
		testCase6();
		testCase7();
		testCase8();
		return arbiter.getVerdict();
	}

	public void testCase1() {
		try {
			arbiter.setVerdict(server.isInDisponivel(), 0);
			server.emprestar();
			arbiter.setVerdict(server.isInEmprestado(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase2() {
		try {
			server.setToEmprestado("server.existeReserva()");
			arbiter.setVerdict(server.isInEmprestado(), 0);
			if (server.existeReserva()) {
				server.retornar();
				arbiter.setVerdict(server.isInReservado(), 0);

			} else {
				arbiter.setVerdict(false, 1);

			}

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase3() {
		try {
			server
					.setToReservado("server.compareDatas (server.dataReserva, server.hoje) = -1");
			arbiter.setVerdict(server.isInReservado(), 0);
			if (server.compareDatas(server.dataReserva, server.hoje) = -1) {
				server.atualizar();
				arbiter.setVerdict(server.isInDisponivel(), 0);

			} else {
				arbiter.setVerdict(false, 1);

			}

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase4() {
		try {
			server
					.setToReservado("server.compareDatas (server.dataReserva, server.hoje) = -1");
			arbiter.setVerdict(server.isInReservado(), 0);
			server.emprestar();
			arbiter.setVerdict(server.isInEmprestado(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase5() {
		try {
			server
					.setToEmprestado("server.compareDate(server.daataEmprestimo, server.hoje) = 1");
			arbiter.setVerdict(server.isInEmprestado(), 0);
			if (server.compareDate(server.daataEmprestimo, server.hoje) = 1) {
				server.atualizar();
				arbiter.setVerdict(server.isInAtrasado(), 0);
				server.devolver();
				arbiter.setVerdict(server.isInDisponivel(), 0);

			} else {
				arbiter.setVerdict(false, 1);

			}

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase6() {
		try {
			server.setToEmprestado();
			arbiter.setVerdict(server.isInEmprestado(), 0);
			server.reservar();
			arbiter.setVerdict(server.isInEmprestado(), 0);
			server.retornar();
			arbiter.setVerdict(server.isInDisponivel(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase7() {
		try {
			server.setToAtrasado("server.existeReserva()");
			arbiter.setVerdict(server.isInAtrasado(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase8() {
		try {
			server.setToAtrasado("server.existeReserva()");
			arbiter.setVerdict(server.isInAtrasado(), 0);
			if (server.existeReserva()) {
				server.devolver();
				arbiter.setVerdict(server.isInReservado(), 0);

			} else {
				arbiter.setVerdict(false, 1);

			}

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}
}
