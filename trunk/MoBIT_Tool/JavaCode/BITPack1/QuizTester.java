/**
 * OUT!<unnamed> This code is automatically generated by the MoBIT Tool
 * 
 * @author Everton Leandro *
 */
public class QuizTester {
	TestableQuiz server = null;
	private Arbiter arbiter = null;

	public  Verdict executeTest ( TestableQuiz s){arbiter = new Arbiter();;;
		server = s;
		int x =   ;
		int onOff =   ;
		int onOff1 =   ;
		int onOff2 =   ;
		int onOff3 =   ;
		int onOff4 =   ;
		int answer =   ;
		
		testCase1(x, onOff, onOff1, onOff2);
		testCase2();
		testCase3(onOff3, onOff4);
		testCase4(answer);
		testCase5();
		testCase6();
		testCase7();
		return arbiter.getVerdict();
	}

	public void testCase1(int x, int onOff, int onOff1, int onOff2) {
		try {
			arbiter.setVerdict(server.isInReady(), 0);
			server.configure(x);
			arbiter.setVerdict(server.isInReady(), 0);
			server.help(onOff);
			arbiter.setVerdict(server.isInHelping(), 0);
			server.help(onOff);
			arbiter.setVerdict(server.isInRunning(), 0);
			server.help(onOff);
			arbiter.setVerdict(server.isInHelping(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase2() {
		try {
			server.setToReady();
			arbiter.setVerdict(server.isInReady(), 0);
			server.abort();
			arbiter.setVerdict(server.isInEnding(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase3(int onOff3, int onOff4) {
		try {
			server.setToRunning();
			arbiter.setVerdict(server.isInRunning(), 0);
			server.pause(onOff);
			arbiter.setVerdict(server.isInPausing(), 0);
			server.pause(onOff);
			arbiter.setVerdict(server.isInRunning(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase4(int answer) {
		try {
			server.setToRunning("!server.endedQuestions()");
			arbiter.setVerdict(server.isInRunning(), 0);
			if (!server.endedQuestions()) {
				server.answerQuestion(answer);
				arbiter.setVerdict(server.isInRunning(), 0);

			} else {
				arbiter.setVerdict(false, 1);

			}

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase5() {
		try {
			server.setToRunning("server.endedQuestions()");
			arbiter.setVerdict(server.isInRunning(), 0);
			if (server.endedQuestions()) {
				arbiter.setVerdict(server.isInEnding(), 0);

			} else {
				arbiter.setVerdict(false, 1);

			}

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase6() {
		try {
			server.setToRunning();
			arbiter.setVerdict(server.isInRunning(), 0);
			server.abort();
			arbiter.setVerdict(server.isInEnding(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}

	public void testCase7() {
		try {
			server.setToReady();
			arbiter.setVerdict(server.isInReady(), 0);
			server.start();
			arbiter.setVerdict(server.isInRunning(), 0);

		} catch (Exception e) {
			arbiter.setVerdict(false, 1);
		}

		catch (Error r) {
			arbiter.setVerdict(false, 2);
		}

		arbiter.definesPartialVeredict();
	}
}
