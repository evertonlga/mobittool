<?xml version="1.0" encoding="ISO-8859-1"?>
<JAS:StructuralPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:JAS="JavaAbstractSyntax" name="Root">
  <structuralPackages name="Aux">
    <compilations>
      <package>
        <javadoc alternateRoot="//@structuralPackages.0/@compilations.0/@package"/>
        <name xsi:type="JAS:SimpleName" fullyQualifiedName="Config" identifier="Config"/>
      </package>
      <types xsi:type="JAS:EnumDeclaration">
        <javadoc alternateRoot="//@structuralPackages.0/@compilations.0/@types.0">
          <tags tagName="EnumVerdict" nested="true">
            <fragments xsi:type="JAS:TextElement" text="This code is automatically generated by the MoBIT Tool  &#xA;&#x9;&#x9;@author Everton Leandro"/>
          </tags>
        </javadoc>
        <name fullyQualifiedName="Verdict" identifier="Verdict"/>
        <enumConstants>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.0/@types.0/@enumConstants.0"/>
          <anonymousClassDeclaration/>
          <name fullyQualifiedName="error" identifier="error"/>
        </enumConstants>
        <enumConstants>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.0/@types.0/@enumConstants.1"/>
          <anonymousClassDeclaration/>
          <name fullyQualifiedName="pass" identifier="pass"/>
        </enumConstants>
        <enumConstants>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.0/@types.0/@enumConstants.2"/>
          <anonymousClassDeclaration/>
          <name fullyQualifiedName="fail" identifier="fail"/>
        </enumConstants>
        <enumConstants>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.0/@types.0/@enumConstants.3"/>
          <anonymousClassDeclaration/>
          <name fullyQualifiedName="inconclusive" identifier="inconclusive"/>
        </enumConstants>
      </types>
    </compilations>
    <compilations>
      <package>
        <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@package"/>
        <name xsi:type="JAS:SimpleName" fullyQualifiedName="Config" identifier="Config"/>
      </package>
      <types xsi:type="JAS:TypeDeclaration">
        <modifiers xsi:type="JAS:Modifier" public="true"/>
        <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@types.0">
          <tags tagName="ArbClass" nested="true">
            <fragments xsi:type="JAS:TextElement" text="This code is automatically generated by the MoBIT Tool  &#xA;&#x9;&#x9;@author Everton Leandro"/>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="JAS:FieldDeclaration">
          <modifiers xsi:type="JAS:Modifier" private="true"/>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@types.0/@bodyDeclarations.0"/>
          <fragments>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="verdict" identifier="verdict"/>
          </fragments>
          <type xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:FieldDeclaration">
          <modifiers xsi:type="JAS:Modifier" private="true"/>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@types.0/@bodyDeclarations.1"/>
          <fragments>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
          </fragments>
          <type xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration" constructor="true">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@types.0/@bodyDeclarations.2"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="verdict" identifier="verdict"/>
                <rightHandSide xsi:type="JAS:QualifiedName" fullyQualifiedName="">
                  <name fullyQualifiedName="pass" identifier="pass"/>
                  <qualifier xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
                </rightHandSide>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
                <rightHandSide xsi:type="JAS:QualifiedName" fullyQualifiedName="">
                  <name fullyQualifiedName="pass" identifier="pass"/>
                  <qualifier xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
                </rightHandSide>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="Arbiter" identifier="Arbiter"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@types.0/@bodyDeclarations.3"/>
          <body>
            <statements xsi:type="JAS:ReturnStatement">
              <expression xsi:type="JAS:SimpleName" fullyQualifiedName="verdict" identifier="verdict"/>
            </statements>
          </body>
          <name fullyQualifiedName="getVerdict" identifier="getVerdict"/>
          <returnType xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@types.0/@bodyDeclarations.4"/>
          <body>
            <statements xsi:type="JAS:IfStatement">
              <elseStatement xsi:type="JAS:Block"/>
              <expression xsi:type="JAS:InfixExpression" operator="NOT_EQUALS">
                <leftOperand xsi:type="JAS:SimpleName" fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
                <rightOperand xsi:type="JAS:QualifiedName" fullyQualifiedName="">
                  <name fullyQualifiedName="fail" identifier="fail"/>
                  <qualifier xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
                </rightOperand>
              </expression>
              <thenStatement xsi:type="JAS:Block">
                <statements xsi:type="JAS:IfStatement">
                  <elseStatement xsi:type="JAS:IfStatement">
                    <elseStatement xsi:type="JAS:IfStatement">
                      <elseStatement xsi:type="JAS:ExpressionStatement">
                        <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                          <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
                          <rightHandSide xsi:type="JAS:QualifiedName" fullyQualifiedName="">
                            <name fullyQualifiedName="error" identifier="error"/>
                            <qualifier xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
                          </rightHandSide>
                        </expression>
                      </elseStatement>
                      <expression xsi:type="JAS:InfixExpression" operator="EQUALS">
                        <leftOperand xsi:type="JAS:SimpleName" fullyQualifiedName="i" identifier="i"/>
                        <rightOperand xsi:type="JAS:NumberLiteral" token="1"/>
                      </expression>
                      <thenStatement xsi:type="JAS:ExpressionStatement">
                        <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                          <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
                          <rightHandSide xsi:type="JAS:QualifiedName" fullyQualifiedName="">
                            <name fullyQualifiedName="inconclusive" identifier="inconclusive"/>
                            <qualifier xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
                          </rightHandSide>
                        </expression>
                      </thenStatement>
                    </elseStatement>
                    <expression xsi:type="JAS:InfixExpression" operator="EQUALS">
                      <leftOperand xsi:type="JAS:SimpleName" fullyQualifiedName="i" identifier="i"/>
                      <rightOperand xsi:type="JAS:NumberLiteral" token="0"/>
                    </expression>
                    <thenStatement xsi:type="JAS:ExpressionStatement">
                      <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                        <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
                        <rightHandSide xsi:type="JAS:QualifiedName" fullyQualifiedName="">
                          <name fullyQualifiedName="fail" identifier="fail"/>
                          <qualifier xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
                        </rightHandSide>
                      </expression>
                    </thenStatement>
                  </elseStatement>
                  <expression xsi:type="JAS:InfixExpression" operator="EQUALS">
                    <leftOperand xsi:type="JAS:SimpleName" fullyQualifiedName="v" identifier="v"/>
                    <rightOperand xsi:type="JAS:BooleanLiteral" booleanValue="true"/>
                  </expression>
                  <thenStatement xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                      <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
                      <rightHandSide xsi:type="JAS:QualifiedName" fullyQualifiedName="">
                        <name fullyQualifiedName="pass" identifier="pass"/>
                        <qualifier xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
                      </rightHandSide>
                    </expression>
                  </thenStatement>
                </statements>
              </thenStatement>
            </statements>
          </body>
          <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
          <parameters>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="v" identifier="v"/>
            <type xsi:type="JAS:PrimitiveType" code="boolean"/>
          </parameters>
          <parameters>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="i" identifier="i"/>
            <type xsi:type="JAS:PrimitiveType" code="int"/>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.0/@compilations.1/@types.0/@bodyDeclarations.5"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="verdict" identifier="verdict"/>
                <rightHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="partialVerdict" identifier="partialVerdict"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="definesPartialVerdict" identifier="definesPartialVerdict"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <name fullyQualifiedName="Arbiter" identifier="Arbiter"/>
      </types>
    </compilations>
  </structuralPackages>
  <structuralPackages name="BITPack1">
    <compilations>
      <package>
        <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@package"/>
        <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT" identifier="BIT"/>
      </package>
      <types xsi:type="JAS:TypeDeclaration">
        <modifiers xsi:type="JAS:Modifier" public="true"/>
        <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@types.0">
          <tags tagName="ArbClass" nested="true">
            <fragments xsi:type="JAS:TextElement" text="This code is automatically generated by the MoBIT Tool&#xA;&#x9;&#x9;@author Everton Leandro"/>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="JAS:FieldDeclaration">
          <modifiers xsi:type="JAS:Modifier" private="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@types.0/@bodyDeclarations.0"/>
          <fragments>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="BIT.server" identifier="server"/>
          </fragments>
          <type xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.TestableQuiz" identifier="TestableQuiz"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:FieldDeclaration">
          <modifiers xsi:type="JAS:Modifier" private="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@types.0/@bodyDeclarations.1"/>
          <fragments>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="BIT.tester" identifier="tester"/>
          </fragments>
          <type xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.QuizTester" identifier="QuizTester"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:FieldDeclaration">
          <modifiers xsi:type="JAS:Modifier" private="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@types.0/@bodyDeclarations.0"/>
          <fragments>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="BIT.verdict" identifier="verdict"/>
          </fragments>
          <type xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.Verdict" identifier="Verdict"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@types.0/@bodyDeclarations.3"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.tester" identifier="tester"/>
                <rightHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.t" identifier="t"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.setTester" identifier="setTester"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
          <parameters>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="BIT.t" identifier="t"/>
            <type xsi:type="JAS:SimpleType">
              <name xsi:type="JAS:SimpleName" fullyQualifiedName="BITQuizTester" identifier="QuizTester"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@types.0/@bodyDeclarations.4"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.server" identifier="server"/>
                <rightHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.s" identifier="s"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.setServer" identifier="setServer"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
          <parameters>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="BIT.s" identifier="s"/>
            <type xsi:type="JAS:SimpleType">
              <name xsi:type="JAS:SimpleName" fullyQualifiedName="BITTestableQuiz" identifier="TestableQuiz"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.0/@types.0/@bodyDeclarations.5"/>
          <body>
            <statements xsi:type="JAS:IfStatement">
              <elseStatement xsi:type="JAS:Block"/>
              <expression xsi:type="JAS:InfixExpression" operator="CONDITIONAL_AND">
                <leftOperand xsi:type="JAS:ParenthesizedExpression">
                  <expression xsi:type="JAS:InfixExpression" operator="NOT_EQUALS">
                    <leftOperand xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.server" identifier="server"/>
                    <rightOperand xsi:type="JAS:NullLiteral"/>
                  </expression>
                </leftOperand>
                <rightOperand xsi:type="JAS:ParenthesizedExpression">
                  <expression xsi:type="JAS:InfixExpression" operator="NOT_EQUALS">
                    <leftOperand xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.executeTest" identifier="tester"/>
                    <rightOperand xsi:type="JAS:NullLiteral"/>
                  </expression>
                </rightOperand>
              </expression>
              <thenStatement xsi:type="JAS:Block">
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                    <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.verdict" identifier="verdict"/>
                    <rightHandSide xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.server" identifier="server"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.tester" identifier="tester"/>
                      <name fullyQualifiedName="BIT.executeTest" identifier="executeTest"/>
                    </rightHandSide>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.performTest" identifier="performTest"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <name fullyQualifiedName="BIT.TestingQuizManager" identifier="TestingQuizManager"/>
        <superclassType xsi:type="JAS:SimpleType">
          <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.QuizManager" identifier="QuizManager"/>
        </superclassType>
      </types>
    </compilations>
    <compilations>
      <package>
        <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@package"/>
        <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT" identifier="BIT"/>
      </package>
      <types xsi:type="JAS:TypeDeclaration">
        <modifiers xsi:type="JAS:Modifier" public="true"/>
        <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0">
          <tags tagName="ArbClass" nested="true">
            <fragments xsi:type="JAS:TextElement" text="This code is automatically generated by the MoBIT Tool&#xA;&#x9;&#x9;@author Everton Leandro"/>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.0"/>
          <body>
            <statements xsi:type="JAS:ReturnStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Ready" literalValue=""/>
                <expression xsi:type="JAS:MethodInvocation">
                  <expression xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="BIT.getState" identifier="getState"/>
                </expression>
                <name fullyQualifiedName="equals" identifier="equals"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.isInReady" identifier="isInReady"/>
          <returnType xsi:type="JAS:PrimitiveType" code="boolean"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.1"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Ready" literalValue=""/>
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="BIT.setState" identifier="setState"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.setToReady" identifier="setToReady"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.2"/>
          <body>
            <statements xsi:type="JAS:ReturnStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Pausing" literalValue=""/>
                <expression xsi:type="JAS:MethodInvocation">
                  <expression xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="BIT.getState" identifier="getState"/>
                </expression>
                <name fullyQualifiedName="equals" identifier="equals"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.isInPausing" identifier="isInPausing"/>
          <returnType xsi:type="JAS:PrimitiveType" code="boolean"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.3"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Pausing" literalValue=""/>
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="BIT.setState" identifier="setState"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.setToPausing" identifier="setToPausing"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.4"/>
          <body>
            <statements xsi:type="JAS:ReturnStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Running" literalValue=""/>
                <expression xsi:type="JAS:MethodInvocation">
                  <expression xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="BIT.getState" identifier="getState"/>
                </expression>
                <name fullyQualifiedName="equals" identifier="equals"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.isInRunning" identifier="isInRunning"/>
          <returnType xsi:type="JAS:PrimitiveType" code="boolean"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.5"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Running" literalValue=""/>
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="BIT.setState" identifier="setState"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.setToRunning" identifier="setToRunning"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.6"/>
          <body>
            <statements xsi:type="JAS:ReturnStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Helping" literalValue=""/>
                <expression xsi:type="JAS:MethodInvocation">
                  <expression xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="BIT.getState" identifier="getState"/>
                </expression>
                <name fullyQualifiedName="equals" identifier="equals"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.isInHelping" identifier="isInHelping"/>
          <returnType xsi:type="JAS:PrimitiveType" code="boolean"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.7"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Helping" literalValue=""/>
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="BIT.setState" identifier="setState"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.setToHelping" identifier="setToHelping"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.8"/>
          <body>
            <statements xsi:type="JAS:ReturnStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Ending" literalValue=""/>
                <expression xsi:type="JAS:MethodInvocation">
                  <expression xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="BIT.getState" identifier="getState"/>
                </expression>
                <name fullyQualifiedName="equals" identifier="equals"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.isInEnding" identifier="isInEnding"/>
          <returnType xsi:type="JAS:PrimitiveType" code="boolean"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.1/@types.0/@bodyDeclarations.9"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <arguments xsi:type="JAS:StringLiteral" escapedValue="Ending" literalValue=""/>
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="BIT.setState" identifier="setState"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="BIT.setToEnding" identifier="setToEnding"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <name fullyQualifiedName="BIT.TestableQuiz" identifier="TestableQuiz"/>
        <superclassType xsi:type="JAS:SimpleType">
          <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT.Quiz" identifier="Quiz"/>
        </superclassType>
      </types>
    </compilations>
    <compilations>
      <package>
        <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@package"/>
        <name xsi:type="JAS:SimpleName" fullyQualifiedName="BIT" identifier="BIT"/>
      </package>
      <types xsi:type="JAS:TypeDeclaration">
        <modifiers xsi:type="JAS:Modifier" public="true"/>
        <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0">
          <tags tagName="OUT!&lt;unnamed>" nested="true">
            <fragments xsi:type="JAS:TextElement" text="This code is automatically generated by the MoBIT Tool&#xA;&#x9;&#x9;@author Everton Leandro"/>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="JAS:FieldDeclaration">
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.0"/>
          <fragments>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="server" identifier="server"/>
          </fragments>
          <type xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="TestableQuiz" identifier="TestableQuiz"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:FieldDeclaration">
          <modifiers xsi:type="JAS:Modifier" private="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.1"/>
          <fragments>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="arbiter" identifier="arbiter"/>
          </fragments>
          <type xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="Arbiter" identifier="Arbiter"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.2"/>
          <body>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <rightHandSide xsi:type="JAS:ClassInstanceCreation">
                  <anonymousClassDeclaration/>
                  <expression xsi:type="JAS:NullLiteral"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Arbiter" identifier="Arbiter"/>
                  </type>
                </rightHandSide>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:Assignment" operator="ASSIGN">
                <leftHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                <rightHandSide xsi:type="JAS:SimpleName" fullyQualifiedName="s" identifier="s"/>
              </expression>
            </statements>
            <statements xsi:type="JAS:ReturnStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <name fullyQualifiedName="getVerdict" identifier="getVerdict"/>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="testCase1" identifier="testCase1"/>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="testCase2" identifier="testCase2"/>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="testCase3" identifier="testCase3"/>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="testCase4" identifier="testCase4"/>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="testCase5" identifier="testCase5"/>
              </expression>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:NullLiteral"/>
                <name fullyQualifiedName="testCase6" identifier="testCase6"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="executeTest" identifier="executeTest"/>
          <returnType xsi:type="JAS:SimpleType">
            <name xsi:type="JAS:SimpleName" fullyQualifiedName="Verdict" identifier="Verdict"/>
          </returnType>
          <parameters>
            <initializer xsi:type="JAS:NullLiteral"/>
            <name fullyQualifiedName="s" identifier="s"/>
            <type xsi:type="JAS:SimpleType">
              <name xsi:type="JAS:SimpleName" fullyQualifiedName="TestableQuiz" identifier="TestableQuiz"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.3"/>
          <body>
            <statements xsi:type="JAS:TryStatement">
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="1"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="e" identifier="e"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Exception" identifier="Exception"/>
                  </type>
                </exception>
              </catchClauses>
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="2"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="r" identifier="r"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Error" identifier="Error"/>
                  </type>
                </exception>
              </catchClauses>
              <body>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInReady" identifier="isInReady"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="start" identifier="start"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInRunning" identifier="isInRunning"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="pause" identifier="pause"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInPausing" identifier="isInPausing"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="pause" identifier="pause"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInRunning" identifier="isInRunning"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="help" identifier="help"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInHelping" identifier="isInHelping"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="help" identifier="help"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInRunning" identifier="isInRunning"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="abort" identifier="abort"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInEnding" identifier="isInEnding"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
              </body>
              <finally/>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <name fullyQualifiedName="definesPartialVeredict" identifier="definesPartialVeredict"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="testCase1" identifier="testCase1"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.4"/>
          <body>
            <statements xsi:type="JAS:TryStatement">
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="1"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="e" identifier="e"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Exception" identifier="Exception"/>
                  </type>
                </exception>
              </catchClauses>
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="2"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="r" identifier="r"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Error" identifier="Error"/>
                  </type>
                </exception>
              </catchClauses>
              <body>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInReady" identifier="isInReady"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInReady" identifier="isInReady"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="help" identifier="help"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInHelping" identifier="isInHelping"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
              </body>
              <finally/>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <name fullyQualifiedName="definesPartialVeredict" identifier="definesPartialVeredict"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="testCase2" identifier="testCase2"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.5"/>
          <body>
            <statements xsi:type="JAS:TryStatement">
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="1"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="e" identifier="e"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Exception" identifier="Exception"/>
                  </type>
                </exception>
              </catchClauses>
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="2"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="r" identifier="r"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Error" identifier="Error"/>
                  </type>
                </exception>
              </catchClauses>
              <body>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInReady" identifier="isInReady"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                    <name fullyQualifiedName="abort" identifier="abort"/>
                  </expression>
                </statements>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInEnding" identifier="isInEnding"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
              </body>
              <finally/>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <name fullyQualifiedName="definesPartialVeredict" identifier="definesPartialVeredict"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="testCase3" identifier="testCase3"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.6"/>
          <body>
            <statements xsi:type="JAS:TryStatement">
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="1"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="e" identifier="e"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Exception" identifier="Exception"/>
                  </type>
                </exception>
              </catchClauses>
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="2"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="r" identifier="r"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Error" identifier="Error"/>
                  </type>
                </exception>
              </catchClauses>
              <body>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInReady" identifier="isInReady"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
              </body>
              <finally/>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <name fullyQualifiedName="definesPartialVeredict" identifier="definesPartialVeredict"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="testCase4" identifier="testCase4"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.7"/>
          <body>
            <statements xsi:type="JAS:TryStatement">
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="1"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="e" identifier="e"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Exception" identifier="Exception"/>
                  </type>
                </exception>
              </catchClauses>
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="2"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="r" identifier="r"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Error" identifier="Error"/>
                  </type>
                </exception>
              </catchClauses>
              <body>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInReady" identifier="isInReady"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
              </body>
              <finally/>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <name fullyQualifiedName="definesPartialVeredict" identifier="definesPartialVeredict"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="testCase5" identifier="testCase5"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="JAS:MethodDeclaration">
          <modifiers xsi:type="JAS:Modifier" public="true"/>
          <javadoc alternateRoot="//@structuralPackages.1/@compilations.2/@types.0/@bodyDeclarations.8"/>
          <body>
            <statements xsi:type="JAS:TryStatement">
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="1"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="e" identifier="e"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Exception" identifier="Exception"/>
                  </type>
                </exception>
              </catchClauses>
              <catchClauses>
                <body>
                  <statements xsi:type="JAS:ExpressionStatement">
                    <expression xsi:type="JAS:MethodInvocation">
                      <arguments xsi:type="JAS:BooleanLiteral"/>
                      <arguments xsi:type="JAS:NumberLiteral" token="2"/>
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                      <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                    </expression>
                  </statements>
                </body>
                <exception>
                  <initializer xsi:type="JAS:NullLiteral"/>
                  <name fullyQualifiedName="r" identifier="r"/>
                  <type xsi:type="JAS:SimpleType">
                    <name xsi:type="JAS:SimpleName" fullyQualifiedName="Error" identifier="Error"/>
                  </type>
                </exception>
              </catchClauses>
              <body>
                <statements xsi:type="JAS:ExpressionStatement">
                  <expression xsi:type="JAS:MethodInvocation">
                    <arguments xsi:type="JAS:MethodInvocation">
                      <expression xsi:type="JAS:SimpleName" fullyQualifiedName="server" identifier="server"/>
                      <name fullyQualifiedName="isInReady" identifier="isInReady"/>
                    </arguments>
                    <arguments xsi:type="JAS:NumberLiteral" token="0"/>
                    <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                    <name fullyQualifiedName="setVerdict" identifier="setVerdict"/>
                  </expression>
                </statements>
              </body>
              <finally/>
            </statements>
            <statements xsi:type="JAS:ExpressionStatement">
              <expression xsi:type="JAS:MethodInvocation">
                <expression xsi:type="JAS:SimpleName" fullyQualifiedName="arbiter" identifier="arbiter"/>
                <name fullyQualifiedName="definesPartialVeredict" identifier="definesPartialVeredict"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="testCase6" identifier="testCase6"/>
          <returnType xsi:type="JAS:PrimitiveType" code="void"/>
        </bodyDeclarations>
        <name fullyQualifiedName="BIT.QuizTester" identifier="QuizTester"/>
      </types>
    </compilations>
  </structuralPackages>
</JAS:StructuralPackage>
